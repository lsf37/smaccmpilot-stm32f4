#
# Config.mk --- Example configuration file to build for the STM32F4.
#
# Copyright (C) 2012, Galois, Inc.
# All Rights Reserved.
#
# This software is released under the "BSD3" license.  Read the file
# "LICENSE" for more information.
#

# GCC prefix for the Cortex-M4 toolchain.
#CONFIG_CORTEX_M4_PREFIX := $(HOME)/local/gcc-arm-none-eabi-4_6-2012q1/bin/arm-none-eabi-
# Or if the toolchain is in your PATH:
CONFIG_CORTEX_M4_PREFIX := arm-none-eabi-

# Path to cabal sandbox where code generators are built
CONFIG_CABAL_SANDBOX := ../.cabal-sandbox

# Path to ivory language repository
CONFIG_IVORY_REPOSITORY := ../ivory

# Path to tower repository
CONFIG_TOWER_REPOSITORY := ../tower

# Root directory of the FreeRTOS source tree.
CONFIG_FREERTOS_PREFIX := ../FreeRTOS

# Root directory of the eChronos tree
CONFIG_ECHRONOS_PREFIX := ../../echronos-smaccm

# Set this variable when using the bootloader on the PX4FMU,
# unset if flashing purely via JTAG.
CONFIG_PX4FMU_BOOTLOADER := 1

# Semantics for assertions in Ivory-generated code caused by using --div-zero,
# --overflow, etc. flags.  Current options:
# IVORY_DEPLOY: No asserts()
# IVORY_TEST:   Insert assert()
CONFIG_IVORY_ASSERT := IVORY_TEST

# ------------------------------------------------------------------------------
# Optional configurations
# ------------------------------------------------------------------------------

# NICTA eChronos RTOS build
# Root directory of the eChronos tree
CONFIG_ECHRONOS_PREFIX := ../../echronos-smaccm
# Location of the prj executable.
CONFIG_ECHRONOS_PRJ    := $(CONFIG_ECHRONOS_PREFIX)/x86_64-unknown-linux-gnu/bin

# Optional: use graphviz to generate PDF from tower graph output.
# Uncomment this option if you have the `dot` tool installed.
#
# CONFIG_BUILD_DOT_PDF := 1

# Using cpp-check
# (http://sourceforge.net/apps/mediawiki/cppcheck/index.php?title=Main_Page)
# Typically available with your applications installer on Linux distros (yum,
# apt-get)
CONFIG_CPP_CHECK_PREFIX := /usr/bin

# Using Frama-C
# (https://www.google.com/search?q=frama-c&oq=frama-c&aqs=chrome.0.57j60l3j59l2.1580j0&sourceid=chrome&ie=UTF-8)
# Likely available with your (Linux distro) installer.
CONFIG_FRAMA_C_PREFIX := /usr/bin

# for model-checking with CBMC

# add a path to your local installation of the CBMC model-checker
# executable. <http://www.cprover.org/cbmc/> (Please note the license of CBMC.)
# CONFIG_CBMC_PREFIX := ../../OutsideSrcs/cbmc/src/cbmc

# location of CBMC driver (cbmc-report)
# CONFIG_CBMC_REPORT := $(CONFIG_CABAL_SANDBOX)/bin

# Uncomment the following line to enable building apps that use runtime
# verification:
# CONFIG_BUILD_RTV := 1

